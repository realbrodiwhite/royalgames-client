{"ast":null,"code":"import { ExtensionType } from '../../../extensions/Extensions.mjs';\nimport { loadTextures } from '../../loader/parsers/textures/loadTextures.mjs';\nimport { Resolver } from '../Resolver.mjs';\n\"use strict\";\nconst resolveTextureUrl = {\n  extension: ExtensionType.ResolveParser,\n  test: loadTextures.test,\n  parse: value => {\n    var _Resolver$RETINA_PREF, _Resolver$RETINA_PREF2;\n    return {\n      resolution: parseFloat((_Resolver$RETINA_PREF = (_Resolver$RETINA_PREF2 = Resolver.RETINA_PREFIX.exec(value)) === null || _Resolver$RETINA_PREF2 === void 0 ? void 0 : _Resolver$RETINA_PREF2[1]) !== null && _Resolver$RETINA_PREF !== void 0 ? _Resolver$RETINA_PREF : \"1\"),\n      format: value.split(\".\").pop(),\n      src: value\n    };\n  }\n};\nexport { resolveTextureUrl };","map":{"version":3,"names":["resolveTextureUrl","extension","ExtensionType","ResolveParser","test","loadTextures","parse","value","_Resolver$RETINA_PREF","_Resolver$RETINA_PREF2","resolution","parseFloat","Resolver","RETINA_PREFIX","exec","format","split","pop","src"],"sources":["/home/user/Desktop/Projects/RoyalGames/royalgames-client/node_modules/pixi.js/src/assets/resolver/parsers/resolveTextureUrl.ts"],"sourcesContent":["import { ExtensionType } from '../../../extensions/Extensions';\nimport { loadTextures } from '../../loader/parsers/textures/loadTextures';\nimport { Resolver } from '../Resolver';\n\nimport type { UnresolvedAsset } from '../../types';\nimport type { ResolveURLParser } from '../types';\n\n/**\n * A parser that will resolve a texture url\n * @memberof assets\n */\nexport const resolveTextureUrl = {\n    extension: ExtensionType.ResolveParser,\n    test: loadTextures.test,\n    parse: (value: string): UnresolvedAsset =>\n        ({\n            resolution: parseFloat(Resolver.RETINA_PREFIX.exec(value)?.[1] ?? '1'),\n            format: value.split('.').pop(),\n            src: value,\n        }),\n} as ResolveURLParser;\n"],"mappings":";;;;AAWO,MAAMA,iBAAoB;EAC7BC,SAAA,EAAWC,aAAc,CAAAC,aAAA;EACzBC,IAAA,EAAMC,YAAa,CAAAD,IAAA;EACnBE,KAAA,EAAQC,KACH;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IAAA;MACGC,UAAA,EAAYC,UAAA,EAAAH,qBAAA,IAAAC,sBAAA,GAAWG,QAAS,CAAAC,aAAA,CAAcC,IAAA,CAAKP,KAAK,eAAAE,sBAAA,uBAAjCA,sBAAA,CAAqC,CAAC,eAAAD,qBAAA,cAAAA,qBAAA,GAAK,GAAG;MACrEO,MAAQ,EAAAR,KAAA,CAAMS,KAAM,IAAG,EAAEC,GAAI;MAC7BC,GAAK,EAAAX;IAAA,CACT;EAAA;AACR","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}