{"ast":null,"code":"\"use strict\";\n\nfunction assignWithIgnore(target, options) {\n  let ignore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  for (const key in options) {\n    if (!ignore[key] && options[key] !== void 0) {\n      target[key] = options[key];\n    }\n  }\n}\nexport { assignWithIgnore };","map":{"version":3,"names":["assignWithIgnore","target","options","ignore","arguments","length","undefined","key"],"sources":["/home/user/Desktop/Projects/RoyalGames/royalgames-client/node_modules/pixi.js/src/scene/container/utils/assignWithIgnore.ts"],"sourcesContent":["/**\n * Assigns properties from one object to another, using an optional array of property names to ignore.\n * @param target - The target object to assign properties to.\n * @param options - The object to assign properties from.\n * @param ignore - An object of property names to ignore ({ propToIgnore: true }).\n */\nexport function assignWithIgnore<T extends Record<string, any>>(\n    target: T,\n    options: T,\n    ignore: Record<string, boolean> = {}\n)\n{\n    for (const key in options)\n    {\n        if (!ignore[key] && options[key] !== undefined)\n        {\n            target[key] = options[key];\n        }\n    }\n}\n"],"mappings":";;AAMO,SAASA,gBACZA,CAAAC,MAAA,EACAC,OACA,EAEJ;EAAA,IAFIC,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAkC,EAEtC;EACI,WAAWG,GAAA,IAAOL,OAClB;IACI,IAAI,CAACC,MAAO,CAAAI,GAAG,KAAKL,OAAQ,CAAAK,GAAG,MAAM,KACrC;MACWN,MAAA,CAAAM,GAAG,CAAI,GAAAL,OAAA,CAAQK,GAAG;IAAA;EAC7B;AAER","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}