{"ast":null,"code":"\"use strict\";\n\nconst onRenderMixin = {\n  _onRender: null,\n  set onRender(func) {\n    const renderGroup = this.renderGroup;\n    if (!func) {\n      if (this._onRender) {\n        renderGroup === null || renderGroup === void 0 ? void 0 : renderGroup.removeOnRender(this);\n      }\n      this._onRender = null;\n      return;\n    }\n    if (!this._onRender) {\n      renderGroup === null || renderGroup === void 0 ? void 0 : renderGroup.addOnRender(this);\n    }\n    this._onRender = func;\n  },\n  /**\n   * This callback is used when the container is rendered. This is where you should add your custom\n   * logic that is needed to be run every frame.\n   *\n   * In v7 many users used `updateTransform` for this, however the way v8 renders objects is different\n   * and \"updateTransform\" is no longer called every frame\n   * @example\n   * const container = new Container();\n   * container.onRender = () => {\n   *    container.rotation += 0.01;\n   * };\n   * @memberof scene.Container#\n   */\n  get onRender() {\n    return this._onRender;\n  }\n};\nexport { onRenderMixin };","map":{"version":3,"names":["onRenderMixin","_onRender","onRender","func","renderGroup","removeOnRender","addOnRender"],"sources":["/home/user/Desktop/Projects/RoyalGames/royalgames-client/node_modules/pixi.js/src/scene/container/container-mixins/onRenderMixin.ts"],"sourcesContent":["import type { Container } from '../Container';\n\nexport interface OnRenderMixinConstructor\n{\n    onRender?: (() => void | null);\n}\nexport interface OnRenderMixin extends Required<OnRenderMixinConstructor>\n{\n    _onRender: (() => void) | null;\n}\n\nexport const onRenderMixin: Partial<Container> = {\n    _onRender: null,\n\n    set onRender(func: () => void)\n    {\n        const renderGroup = this.renderGroup;\n\n        if (!func)\n        {\n            if (this._onRender)\n            {\n                renderGroup?.removeOnRender(this);\n            }\n\n            this._onRender = null;\n\n            return;\n        }\n\n        if (!this._onRender)\n        {\n            renderGroup?.addOnRender(this);\n        }\n\n        this._onRender = func;\n    },\n\n    /**\n     * This callback is used when the container is rendered. This is where you should add your custom\n     * logic that is needed to be run every frame.\n     *\n     * In v7 many users used `updateTransform` for this, however the way v8 renders objects is different\n     * and \"updateTransform\" is no longer called every frame\n     * @example\n     * const container = new Container();\n     * container.onRender = () => {\n     *    container.rotation += 0.01;\n     * };\n     * @memberof scene.Container#\n     */\n    get onRender(): () => void\n    {\n        return this._onRender;\n    }\n} as Container;\n"],"mappings":";;AAWO,MAAMA,aAAoC;EAC7CC,SAAW;EAEX,IAAIC,SAASC,IACb;IACI,MAAMC,WAAA,GAAc,IAAK,CAAAA,WAAA;IAEzB,IAAI,CAACD,IACL;MACI,IAAI,KAAKF,SACT;QACIG,WAAA,aAAAA,WAAA,uBAAAA,WAAA,CAAaC,cAAA,CAAe,IAAI;MAAA;MAGpC,KAAKJ,SAAY;MAEjB;IAAA;IAGA,KAAC,KAAKA,SACV;MACIG,WAAA,aAAAA,WAAA,uBAAAA,WAAA,CAAaE,WAAA,CAAY,IAAI;IAAA;IAGjC,KAAKL,SAAY,GAAAE,IAAA;EAAA,CACrB;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;EAeA,IAAID,QACJA,CAAA;IACI,OAAO,IAAK,CAAAD,SAAA;EAAA;AAEpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}